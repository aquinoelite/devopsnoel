name: Python Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Enforce a stable Python version

      - name: Verify Python Version
        run: python --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt || exit 1; else echo "No requirements.txt found"; fi

      - name: Run tests
        continue-on-error: true  # Prevents workflow from stopping if tests fail
        run: pytest --maxfail=5 --disable-warnings || true

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} "echo 'SSH connection successful'"

      - name: Run SSH commands on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << EOF
            echo "Connected to EC2"
            uname -a
          EOF
